// under flow exception class
class UnderFlow extends Exception{

UnderFlow(String s)
{
super(s);
}

}




class DynStack implements IntStack
{

   private int stck[];

   private int tos;

   DynStack(int size)
  {
   stck = new int[size];

   tos = -1;
  }

  // push method

  public void push(int item)
{

     if(tos==stck.length-1)
   {
            int temp[]=new int[stck.length*2];
                  
            for(int i=0;i<stck.length;i++)
                      temp[i]=stck[i];

            stck = temp;
            stck[++tos]=item;
     }

     else

     stck[++tos]=item;
 }


//pop method

 public int pop()
{

   try
  {

   if(tos<0)
 
   throw new UnderFlow("Stack is Under Flow");
  }

  catch(UnderFlow u)
  {

   System.out.println(u);

   System.exit(0);
  }

  return stck[tos--];
 }

}

//class Driver to check working of above code

class DynStckTest
{

   public static void main(String args[])
  {
  
     IntStack mystack;//declaring interface refrence variable

     DynStack ds = new DynStack(5);
     
    
     
      mystack = ds;
      
      ds.pop();  //this cause an under flow Exception
     }
}
